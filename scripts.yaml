alert_ack_delay:
  sequence:
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: alert.turn_on
    data:
      entity_id: '{{ states.alert|selectattr(''state'',''eq'',''off'')|map(attribute=''entity_id'')|join('','')
        }}

        '
  mode: single
  alias: alert-ack-delay
alert_ack_all:
  alias: alert-ack-all
  sequence:
  - service: alert.turn_off
    data:
      entity_id: '{{ states.alert|selectattr(''state'',''eq'',''on'')|map(attribute=''entity_id'')|join('','')
        }}

        '
  mode: single
create_every_light_group:
  sequence:
  - service: group.set
    data:
      object_id: 'group.all_lights:'
      entities: '{{ states.light |  map(attribute=''entity_id'') | join('','') }}

        '
create_every_automation_group:
  sequence:
  - service: group.set
    data:
      object_id: 'group.all_automations:'
      entities: '{{ states.automation |  map(attribute=''entity_id'') | join('','')
        }}

        '
create_every_switch_group:
  sequence:
  - service: group.set
    data:
      object_id: group.switches
      entities: '{{ states.switch |  map(attribute=''entity_id'') | join('','') }}

        '
let_the_chickens_out:
  alias: Let the chickens out
  sequence:
  - service: automation.turn_off
    target:
      entity_id: automation.chicken_pen_door_lockout
    data:
      stop_actions: true
  - service: cover.open_cover
    metadata: {}
    data: {}
    target:
      entity_id: cover.chicken_pen
  description: ''
  icon: mdi:food-drumstick
house:
  alias: house
  sequence:
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_tree_1
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
all_trees_random:
  alias: all trees random
  sequence:
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_tree_1, light.wled_half, light.wled_mid, light.wled_yard
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
half_random:
  alias: half random
  sequence:
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_half
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
mid_random:
  alias: mid random
  sequence:
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_mid
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
yard:
  alias: yard
  sequence:
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_yard
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
all_trees_each_random:
  alias: all trees each random
  sequence:
  - action: select.select_option
    target:
      entity_id: select.wled_tree_1_color_palette
    data:
      option: '{{ state_attr(''select.wled_tree_1_color_palette'', ''options'') |
        random }}'
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_tree_1
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  - action: select.select_option
    target:
      entity_id: select.wled_half_color_palette
    data:
      option: '{{ state_attr(''select.wled_tree_1_color_palette'', ''options'') |
        random }}'
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_half
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  - action: select.select_option
    target:
      entity_id: select.wled_mid_color_palette
    data:
      option: '{{ state_attr(''select.wled_tree_1_color_palette'', ''options'') |
        random }}'
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_mid
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  - action: select.select_option
    target:
      entity_id: select.wled_yard_color_palette
    data:
      option: '{{ state_attr(''select.wled_tree_1_color_palette'', ''options'') |
        random }}'
  - action: light.turn_on
    metadata: {}
    target:
      entity_id: light.wled_yard
    data_template:
      effect: '{{ state_attr("light.wled_tree_1", "effect_list") | random }}'
  description: ''
