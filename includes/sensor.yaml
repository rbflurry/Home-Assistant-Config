- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: processor_use
    - type: last_boot
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: disk_use
      arg: /
  scan_interval: 120

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time_iso'

- platform: cert_expiry
  host: !secret ha_cert 
  
- platform: cert_expiry
  host: !secret nginz_cert 
  
- platform: history_stats
  name: history_climate_fan_on_today
  entity_id: binary_sensor.climate_fan
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
  scan_interval: 60
  
- platform: history_stats
  name: history_climate_cool_on_today
  entity_id: sensor.climate_operation
  state: 'cooling'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
  scan_interval: 60
  
- platform: history_stats
  name: history_climate_heat_on_today
  entity_id: sensor.climate_operation
  state: 'heating'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
  scan_interval: 60
  
- platform: history_stats
  name: history_climate_aux_heat_on_today
  entity_id: binary_sensor.climate_aux_heat
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
  scan_interval: 60
 
- platform: snmp
  name: Garage Temp
  host: 192.168.47.183
  port: 161
#  accept_errors: true
  community: public
  baseoid: 1.3.6.1.4.1.21239.2.2.1.6.1
  unit_of_measurement: "°F"
  
- platform: snmp   
  name: Garage Humidity
  host: 192.168.47.183
  port: 161
 # accept_errors: true
  community: public
  baseoid: 1.3.6.1.4.1.21239.2.2.1.7.1
  unit_of_measurement: "%"

- platform: snmp
  name: Basement Temp
  host: 192.168.47.123
  port: 161
  accept_errors: true
  community: bittner
  baseoid: 1.3.6.1.4.1.21239.2.2.1.6.1
  unit_of_measurement: "°F"
  
- platform: snmp   
  name: Basement Humidity
  host: 192.168.47.123
  port: 161
  accept_errors: true
  community: bittner
  baseoid: 1.3.6.1.4.1.21239.2.2.1.7.1
  unit_of_measurement: "%"
  
# - platform: template
  # sensors:
    # deeks_collar: #unique names; this is different from the one above
      # value_template: >
        # {% if is_state('sensor.deeks_collar_state', 'unknown') %}
          # -100 
        # {% else %}
          # {{states.sensor.deeks_collar_state.state | float}}
        # {% endif %}
# - platform: statistics
  # entity_id: 'sensor.deeks_collar' 
  # name: 'deeks_collar_stats' 
  # sampling_size: 10
  
# - platform: template
  # sensors:
      # bt_car_keys_threshold:
        # friendly_name: 'deeks_collar_threshold'
        # value_template: '{{ states.sensor.deeks_collar_stats_mean.attributes["average_change"] | float > 0 }}' #"key_car_stats" is the name from C; mean is used but could be also other statistics (median, change, variation, count, etc)

# - platform: sql
# #  db_url: postgres://hass:hass@192.168.47.155/hass
  # db_url: mysql://hass:hass@core-mariadb/homeassistant
  # scan_interval: 900
  # queries:
#    - name: sql States recorded today
#      query: "SELECT COUNT(*) as value FROM states WHERE created BETWEEN CURDATE() AND adddate(current_date, 1) LIMIT 1;"
#      column: 'value'
#      unit_of_measurement: States
#    - name: sql States recorded yesterday
#      query: "SELECT COUNT(*) as value FROM states WHERE created BETWEEN subdate(current_date, 1) and CURDATE() LIMIT 1;"
 #     column: 'value'
 #     unit_of_measurement: States
  
- platform: statistics
  name: Local Rain 24 Hours Statistics
  entity_id: sensor.pws_5in1_total_rain
  state_characteristic: change
  sampling_size: 4320 # Enough for 3 readings a minute
  max_age:
    hours: 24
- platform: statistics
  name: Local Rain 1 Hours Statistics
  entity_id: sensor.pws_5in1_total_rain
  state_characteristic: change
  sampling_size: 2000 # Enough for 3 readings a minute
  max_age:
    hours: 1
- platform: statistics
  name: Peak Wind Speed
  entity_id: sensor.pws_5in1_wind
  state_characteristic: value_max
  sampling_size: 2000 # Enough for 3 readings a minute
  max_age:
    hours: 1
- platform: statistics
  name: Average Wind Speed
  entity_id: sensor.pws_5in1_wind
  state_characteristic: mean
  sampling_size: 2000 # Enough for 3 readings a minute
  max_age:
    minutes: 2
- platform: statistics
  name: Lowest temp last 12 hr
  entity_id: sensor.pws_5in1_temperature
  state_characteristic: value_min
  sampling_size: 20000 # Enough for 3 readings a minute
  max_age:
    hours: 12
- platform: statistics
  name: Highest Temp Last 12 hr
  entity_id: sensor.pws_5in1_temperature
  state_characteristic: value_max
  sampling_size: 20000 # Enough for 3 readings a minute
  max_age:
    hours: 12

- platform: template
  sensors:
    template_rain_since_midnight:
      friendly_name: "Rain since midnight"
      unit_of_measurement: 'in'
      value_template: "{{ ((states('sensor.pws_5in1_Total_Rain') | float(0)) - (states('sensor.rain_at_midnight') | float(0))) | round(2) }}"
    template_pws_5in1_weather_wind_dir:
      friendly_name: PWS 5in1 Wind Direction True
      value_template: >
        {% set direction = ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
        {% set degree = states('sensor.pws_5in1_wind_direction')|float %}
        {{ direction[((degree+11.25)/22.5)|int] }}



