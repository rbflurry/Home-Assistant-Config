- platform: template
  sensors:
    wood_stove_blower:
      value_template: "{{iif(states('sensor.esp11_power')|int(0) > 100, 'True')}}"
    climate_aux_heat:
      value_template: "{{ states.climate.home.attributes.aux_heat == 'on' }}"
      friendly_name: 'Aux Heat'
    climate_fan:
      value_template: "{{ states.climate.home.attributes.fan == 'on' }}"
      friendly_name: 'Fan'
    chicken_door_after_dark:
      value_template: '{{ (is_state("cover.chicken_door", "open") or is_state("cover.chicken_door", "unknown")) and states.sensor.time.state > states.sensor.chicken_door_last_call_time_dirty.state }}'
      #value_template: '{{ (is_state("cover.chicken_door", "open") or is_state("cover.chicken_door", "unknown")) and states.sensor.time.state > states.sensor.chicken_door_last_call_time_dirty.state and is_state("input_boolean.chicken_door_last_call", "off") }}'
    chicken_pen_after_dark:
      value_template: '{{ (is_state("cover.chicken_pen", "open") or is_state("cover.chicken_pen", "unknown")) and states.sensor.time.state > states.sensor.chicken_door_last_call_time_dirty.state and is_state("input_boolean.chicken_door_last_call", "off") }}'
    still_dark:
      value_template: '{{ states.sun.sun.attributes.elevation < -3 }}'
    chicken_door_after_open:
      value_template: '{{(is_state("cover.chicken_door", "closed") or is_state("cover.chicken_door", "unknown")) and is_state("sun.sun", "above_horizon") and states.sensor.time.state > states.sensor.chicken_door_time.state}}'
#    alarm_is_pending_triggered:
#      value_template: '{{states.alarm_control_panel.ha_alarm.attributes.post_pending_state == "triggered" }}'
#    alarm_is_pending:
#      value_template: '{{states.alarm_control_panel.ha_alarm.state == "pending" }}'
    template_weather_down:
      value_template: '{{ is_state("sensor.pws_5in1_temperature", "unavailable") and (now() > today_at("07:00") and now() < today_at("22:00")) }}'
    template_disk_space:
      value_template: '{{states.sensor.disk_use_percent.state |int > 90}}'
    template_blue_iris_running:
      value_template: '{{ is_state("sensor.blueiris", "running") or is_state("sensor.blueiris", "starting")}}'
    template_chickens_need_feeding:
      value_template: '{{  (as_timestamp(now()) - as_timestamp(as_datetime((state_attr("input_datetime.chicken_last_feed", "timestamp"))))) > 432000 }}'
- platform: trend
  sensors:
    trend_house_temperature_up:
      friendly_name: 'Temp increasing'
      entity_id: sensor.home_temperature
      device_class: heat
    trend_house_temperature_down:
      friendly_name: 'Temp decreasing'
      entity_id: sensor.home_temperature
      device_class: cold
      invert: Yes
    trend_outside_temperature_up:
      friendly_name: 'Outside Temp increasing'
      entity_id: sensor.pws_5in1_temperature
      device_class: heat
    trend_outside_temperature_down:
      friendly_name: 'Outisde Temp decreasing'
      entity_id: sensor.pws_5in1_temperature
      device_class: cold
      invert: Yes
    trend_stove_temperature_up:
      friendly_name: 'Stove Temp increasing'
      entity_id: sensor.stove_air_sensor
      device_class: heat
    trend_stove_temperature_down:
      friendly_name: 'Stove Temp decreasing'
      entity_id: sensor.stove_air_sensor
      device_class: cold
      invert: Yes


# - platform: command_line
  # command: 'netstat -atn | grep :3334 | grep ESTABLISHED | wc -l'
  # name: 'zigbee_online'
  # device_class: connectivity
  # payload_on: 1
  # payload_off: 0
  


- platform: bayesian
  prior: 0.33
  name: 'Bayesian Sleeping'
  probability_threshold: 0.80
  observations:
      - entity_id: 'group.device_family'
        prob_given_true: 0.99
        prob_given_false: 0.56
        platform: 'state'
        to_state: 'home'
      - entity_id: 'sun.sun'
        prob_given_true: 0.75
        prob_given_false: 0.31
        platform: 'state'
        to_state: 'below_horizon'
      - entity_id: 'group.indoor_lights'
        prob_given_true: 0.9
        prob_given_false: 0.5
        platform: 'state'
        to_state: 'off'
      # - entity_id: 'sensor.coffeemaker'
        # prob_given_true: 0.8
        # prob_given_false: 0.4
        # platform: 'state'
        # to_state: 'Ready'
      # - entity_id: 'variable.last_motion'
        # prob_given_true: 0.9
        # prob_given_false: 0.3
        # platform: 'state'
        # to_state: 'Bathroom Motion'
      - entity_id: 'sensor.fry_battery_state'
        prob_given_true: 0.25
        prob_given_false: 0.75
        platform: 'state'
        to_state: 'Not Charging'
