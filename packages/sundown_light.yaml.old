


input_number:
  auto_light_minutes:
    name: Minutes after sunset
    icon: mdi:timer-outline
    initial: 30
    min: 0
    max: 120
    step: 10
  auto_light_duration:
    name: Duration hours
    icon: mdi:timer-outline
    initial: 4
    min: 0
    max: 8
    step: 0.5

sensor:
- platform: template
  sensors:
      auto_light_start:
        friendly_name: 'Lights on at'
        value_template: '{{ (as_timestamp(states.sun.sun.attributes.next_setting) + (states("input_number.auto_light_minutes") | int)  * 60)  | timestamp_custom("%I:%M %p") }}'

      auto_light_stop:
        friendly_name: 'Lights out at'
        value_template: '{{ ( as_timestamp(states.sun.sun.attributes.next_setting) + (states("input_number.auto_light_minutes") | int)  * 60 + (states("input_number.auto_light_duration") | float) * 60 * 60 ) | timestamp_custom("%I:%M %p") }}'

      auto_light_minutes:
        friendly_name: 'Lights on'
        value_template: '{{ "%d minutes after sunset" | format(states("input_number.auto_light_minutes") | int) }}'


      auto_light_duration:
        friendly_name: 'Lights on for'
        value_template: '{{ "%0.1f hours" | format(states("input_number.auto_light_duration") | float) }}'

        

automation:
  - alias: "auto_light_on enabled"
    trigger:
      platform: state
      entity_id: input_number.auto_light_minutes, input_number.auto_light_duration
    action:
    - service: homeassistant.turn_on
      data:
        entity_id:
          - automation.auto_light_on
    - service: homeassistant.turn_on
      data:
        entity_id:
          - automation.auto_light_off
  - alias: "auto_light_on"
    initial_state: True
    trigger:
      - platform: time_pattern
        minutes: '/1'
        seconds: 10
    condition:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.sensor.auto_light_start.state }}'
    action:
      - service: homeassistant.turn_on
        entity_id: "group.lights2"
  - alias: "auto_light_off"
    initial_state: True
    trigger:
      - platform: time_pattern
        minutes: '/1'
        seconds: 10
    condition:
      - condition: template
        value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.sensor.auto_light_stop.state }}'
    action:
      - service: homeassistant.turn_off
        entity_id: "group.lights2"